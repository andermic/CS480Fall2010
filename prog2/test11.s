Reading file test11
start program token: class
start declaration token: class
start classDeclaration token: class
start classBody token: begin
start nonClassDeclaration token: var
start nonFunctionDeclaration token: var
start variableDeclaration token: var
start nameDeclaration token: x
start type token: int
recognized type token: ;
recognized nameDeclaration token: ;
recognized variableDeclaration token: ;
recognized nonFunctionDeclaration token: ;
recognized nonClassDeclaration token: ;
recognized classBody token: ;
recognized classDeclaration token: ;
recognized declaration token: ;
start declaration token: function
start nonClassDeclaration token: function
start functionDeclaration token: function
start arguments token: (
start argumentList token: )
recognized argumentList token: )
recognized arguments token: :
start returnType token: :
start type token: int
recognized type token: var
recognized returnType token: var
start functionBody token: var
start nonClassDeclaration token: var
start nonFunctionDeclaration token: var
start variableDeclaration token: var
start nameDeclaration token: c
start type token: tmp
recognized type token: ;
recognized nameDeclaration token: ;
recognized variableDeclaration token: ;
recognized nonFunctionDeclaration token: ;
recognized nonClassDeclaration token: ;
start compoundStatement token: begin
start statement token: c
start assignOrFunction token: c
start reference token: c
recognized reference token: =
start expression token: random
start relExpression token: random
start plusExpression token: random
start timesExpression token: random
start term token: random
start reference token: random
recognized reference token: (
start parameterList token: 100
start expression token: 100
start relExpression token: 100
start plusExpression token: 100
start timesExpression token: 100
start term token: 100
recognized term token: )
recognized timesExpression token: )
recognized plusExpression token: )
recognized relExpression token: )
recognized expression token: )
recognized parameterList token: )
recognized term token: ;
recognized timesExpression token: ;
recognized plusExpression token: ;
recognized relExpression token: ;
recognized expression token: ;
recognized assignOrFunction token: ;
recognized statement token: ;
start statement token: if
start ifStatement token: if
start expression token: c
start relExpression token: c
start plusExpression token: c
start timesExpression token: c
start term token: c
start reference token: c
recognized reference token: >
recognized term token: >
recognized timesExpression token: >
recognized plusExpression token: >
start plusExpression token: 50
start timesExpression token: 50
start term token: 50
recognized term token: )
recognized timesExpression token: )
recognized plusExpression token: )
recognized relExpression token: )
recognized expression token: )
start statement token: c
start assignOrFunction token: c
start reference token: c
recognized reference token: =
start expression token: 0
start relExpression token: 0
start plusExpression token: 0
start timesExpression token: 0
start term token: 0
recognized term token: else
recognized timesExpression token: else
recognized plusExpression token: else
recognized relExpression token: else
recognized expression token: else
recognized assignOrFunction token: else
recognized statement token: else
start statement token: c
start assignOrFunction token: c
start reference token: c
recognized reference token: =
start expression token: 1
start relExpression token: 1
start plusExpression token: 1
start timesExpression token: 1
start term token: 1
recognized term token: ;
recognized timesExpression token: ;
recognized plusExpression token: ;
recognized relExpression token: ;
recognized expression token: ;
recognized assignOrFunction token: ;
recognized statement token: ;
recognized ifStatement token: ;
recognized statement token: ;
recognized compoundStatement token: ;
recognized functionBody token: ;
recognized functionDeclaration token: ;
recognized nonClassDeclaration token: ;
recognized declaration token: ;
recognized program token: <eof>
